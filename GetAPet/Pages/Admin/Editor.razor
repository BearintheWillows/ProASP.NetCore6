@page "/admin/pets/edit/{id:long}"
@page "/admin/pets/create"
@using GetAPet.Models.Repository
@inherits OwningComponentBase<IAppRepository>
//TODO - Get Working
<style>
div.validation-message {color:  rgb(220, 53, 69); font-weight:  500}
</style>

<h3 class="bg-@ThemeColor text-white text-center p-1">@TitleText a Pet</h3>
<EditForm Model="Pet" OnValidSubmit="SavePet">
    <DataAnnotationsValidator/>
    @if ( Pet.Id == 0 )
    {
        <div class="form-group">
            <label>ID</label>
            <input class="form-control" disabled value="@Pet.Id"/>
        </div>
    }
        <div class="form-group">
        <label>Name</label>
        <ValidationMessage For="@(() => Pet.Name)" />
        <InputText class="form-control" @bind-Value="Pet.Name" />
    </div>
    <div class="form-group">
         <label>Species</label>
         <ValidationMessage For="@(() => Pet.Species)" />
     <InputText class="form-control" @bind-Value="Pet.Species" />
     </div>
     <div class="form-group">
        <label>Breed</label>
        <ValidationMessage For="@(() => Pet.Breed)" />
        <InputText class="form-control" @bind-Value="Pet.Breed" />
     </div>
     <div class="form-group">
        <label>Color</label>
        <ValidationMessage For="@(() => Pet.Color)" />
        <InputText class="form-control" @bind-Value="Pet.Color" />
     </div>
    <div class="form-group">
        <label>Price</label>
        <ValidationMessage For="@(() => Pet.Notes)" />
        <InputNumber class="form-control" @bind-Value="Pet.Notes" />
    </div>
     <div class="form-group">
         <label>Price</label>
         <ValidationMessage For="@(() => Pet.Price)" />
         <InputNumber class="form-control" @bind-Value="Pet.Price" />
         </div>
     <div class="mt-2">
     <button type="submit" class="btn btn-@ThemeColor">Save</button>
     <NavLink class="btn btn-secondary" href="/admin/pets">Cancel</NavLink>
     </div>
    </EditForm>


@code {
    public IAppRepository Repository => Service;

    [Inject]
    public NavigationManager? NavManager { get; set; }

    [Parameter]
    public long ParamId { get; set; } = 0;

    public Pet Pet { get; set; } = new();

    protected override void OnParametersSet()
    {
        if (ParamId != 0 )
        {
            Pet = Repository.Pets.FirstOrDefault( p => p.Id == ParamId ) ?? new();
        }
    }

    public void SavePet()
    {
        if (ParamId == 0 )
        {
            Repository.CreatePet( Pet );
        } else
        {
            Repository.SavePet( Pet );
        }
        NavManager.NavigateTo( "/admin/pets" );
    }

    public string ThemeColor =>ParamId == 0 ? "primary" : "warning";
    public string TitleText => ParamId == 0 ? "Create" : "Edit";
    
}